# vim: ft=dosini
# Author: Peter Merikan
# Description: Keybindings for Aerc

# Binds are of the form <key sequence> = <command to run>
# To use '=' in a key sequence, substitute it with "Eq": "<Ctrl+Eq>"
# If you wish to bind #, you can wrap the key sequence in quotes: "#" = quit

? = :help keys<Enter>
<C-t> = :term<Enter>
<C-p> = :prev-tab<Enter>
<C-n> = :next-tab<Enter>
gt = :next-tab<Enter>
gT = :prev-tab<Enter>
#H = :prev-tab<Enter>
#L = :next-tab<Enter>
<C-z> = :suspend<Enter>
<C-c> = :prompt 'Quit?' quit<Enter>
ZZ = :prompt 'Quit? ' quit<Enter>
ZQ = :quit -f<Enter>


[messages]
# keybindings for the message list
<Enter> = :view<Enter>
q = :prompt 'Quit?' quit<Enter>
j = :next<Enter>
k = :prev<Enter>
<C-d> = :next 50%<Enter>
<C-u> = :prev 50%<Enter>
<C-f> = :next 100%<Enter>
<C-b> = :prev 100%<Enter>
g = :select 0<Enter>
G = :select -1<Enter>

J = :next-folder<Enter>
K = :prev-folder<Enter>
H = :collapse-folder<Enter>
L = :expand-folder<Enter>

v = :mark -t<Enter>
<Space> = :mark -t<Enter>:next<Enter>
V = :mark -v<Enter>

T = :toggle-threads<Enter>
zc = :fold<Enter>
zo = :unfold<Enter>
za = :fold -t<Enter>
zM = :fold -a<Enter>
zR = :unfold -a<Enter>
<tab> = :fold -t<Enter>

zz = :align center<Enter>
zt = :align top<Enter>
zb = :align bottom<Enter>

d = :choose -o y 'Really delete this message' delete-message<Enter>
D = :delete<Enter>
a = :archive flat<Enter>
A = :unmark -a<Enter>:mark -T<Enter>:archive flat<Enter>

C = :compose<Enter>
m = :compose<Enter>

b = :bounce<space>

\;rr = :reply -a<Enter> #
\;rq = :reply -aq<Enter>
\;Rr = :reply<Enter>
\;Rq = :reply -q<Enter>

F = :filter<space> # filter mails. Next character filters mails.
fa = :filter -a<space> # filter entire text of mails. e.g. "fa foo" filters mails containing "foo" in the entire mail.
fb = :filter -b<space> # filter text in the body of mails
fc = :filter -c<space> # filter mails cc'd to recipient
fd = :filter -d<space> # filter mails with date range (e.g. 2019-01-01..2019-12-31)
ff = :filter -f<space> "{{index (.From | emails) 0}}" <Enter> # filter all mails from current sender
fF = :filter -f<space> # filter mails from sender
fr = :filter -r<space> # filter read mails (old mails)
fs = :filter -H<space> subject:"{{.SubjectBase}}" <Enter> #
fS = :filter -H<space> subject:<Space> # filter mails with subject e.g. "fs foo" filters mails with subject containing "foo"
ft = :filter -t<space> # filter mails to recipient
fu = :filter -u<space> # filter unread mails (new mails)

sA = :sort -r arrival<Enter> # sort mails by arrival (reversed)
sa = :sort arrival<Enter> # sort mails by arrival
sC = :sort -r cc<Enter> # sort mails by cc (reversed)
sc = :sort cc<Enter> # sort mails by cc
sD = :sort -r date<Enter> # sort mails by time & date
sd = :sort date<Enter> # sort mails by time & date
sF = :sort -r from<Enter> # sort mails by sender (reversed)
sf = :sort from<Enter> # sort mails by sender
sR = :sort -r read<Enter> # sort mails by read status (reversed)
sr = :sort read<Enter> # sort mails by read status
sS = :sort -r subject<Enter> # sort mails by subject (reversed)
ss = :sort subject<Enter> # sort mails by subject
sT = :sort -r to<Enter> # sort mails by to (reversed)
st = :sort to<Enter> # sort mails by to
sZ = :sort -r size<Enter> # sort mails by size (reversed)
sz = :sort size<Enter> # sort mails by size

ta = :flag -ta<Enter> # toggle mail between answered and unanswered
tr = :read -t<Enter> # toggle read status
ts = :flag -tx Seen<Enter> # toggle seen status
tt = :toggle-threads<Enter> # toggle threads

yy = :copy<space> # copy mail to a folder. Next character filters folders.
ys = :pipe -b echo "{{index (.From | emails) 0}}" | pbcopy # yank sender address
yS = :pipe -b echo "{{.Subject}}" | pbcopy # yank subject
yd = :pipe -b echo "{{.Date}}" | pbcopy # yank date

c = :cf<space>
$ = :term<space>
! = :term<space>
| = :pipe<space>

/ = :search<space>
\ = :filter<space>
n = :next-result<Enter>
N = :prev-result<Enter>
<Esc> = :clear<Enter>

<C-w>s = :split<Enter>
<C-w>v = :vsplit<Enter>

# pl = :patch list<Enter>
# pa = :patch apply <Tab>
# pd = :patch drop <Tab>
# pb = :patch rebase<Enter>
# pt = :patch term<Enter>
# ps = :patch switch <Tab>

[messages:folder=Drafts] # messages list in Drafts folder
<Enter> = :recall<Enter>

[view]
# keybindings for the message viewer
/ = :toggle-key-passthrough<Enter>/
q = :close<Enter>
O = :open<Enter>
o = :open<Enter>
S = :save<space>
| = :pipe<space>
D = :delete<Enter>
A = :archive flat<Enter>

<C-l> = :open-link <space>

f = :forward<Enter>
rr = :reply -a<Enter>
rq = :reply -aq<Enter>
Rr = :reply<Enter>
Rq = :reply -q<Enter>

H = :toggle-headers<Enter>
<C-k> = :prev-part<Enter>
<C-j> = :next-part<Enter>
J = :next<Enter>
K = :prev<Enter>

[view::passthrough]
$noinherit = true
$ex = <C-x>
<Esc> = :toggle-key-passthrough<Enter>

[compose]
# Keybindings used when the embedded terminal is not selected in the compose
# view
$noinherit = true
$ex = <C-x>
$complete = <C-o>
<C-j> = :next-field<Enter>
<C-k> = :prev-field<Enter>
<tab> = :next-field<Enter>
<backtab> = :prev-field<Enter>
#<C-Up> = :prev-field<Enter>
#<C-Down> = :next-field<Enter>
<A-p> = :switch-account -p<Enter>
<A-n> = :switch-account -n<Enter>
<C-p> = :prev-tab<Enter>
<C-n> = :next-tab<Enter>

[compose::editor]
# Keybindings used when the embedded terminal is selected in the compose view
$noinherit = true
$ex = <C-x>
<C-j> = :next-field<Enter>
<C-k> = :prev-field<Enter>
<C-n> = :next-tab<Enter>
<C-p> = :prev-tab<Enter>
#<C-Up> = :prev-field<Enter>
#<C-Down> = :next-field<Enter>
#<C-PgUp> = :prev-tab<Enter>
#<C-PgDn> = :next-tab<Enter>

[compose::review]
# Keybindings used when reviewing a message to be sent
# Inline comments are used as descriptions on the review screen
y = :send<Enter> # Send
n = :abort<Enter> # Abort (discard message, no confirmation)
s = :sign<Enter> # Toggle signing
x = :encrypt<Enter> # Toggle encryption to all recipients
v = :preview<Enter> # Preview message
p = :postpone<Enter> # Postpone
q = :choose -o d discard abort -o p postpone postpone<Enter> # Abort or postpone
e = :edit<Enter> # Edit (body and headers)
a = :attach<space> # Add attachment
d = :detach<space> # Remove attachment

[terminal]
$noinherit = true
$ex = <C-x>

<C-p> = :prev-tab<Enter>
<C-n> = :next-tab<Enter>
#<C-PgUp> = :prev-tab<Enter>
#<C-PgDn> = :next-tab<Enter>
