// this is my personal key-bindings to get the real vim feeling

// bit for modifiers
// bits: 0  None
// bits: 1  SHIFT
// bits: 2  CONTROL
//
// Note:
// If the default key layout is lower case,
// and you want to use `Shift + q` to trigger the exit event,
// the setting should like this `exit: Some(( code: Char('Q'), modifiers: ( bits: 1,),)),`
// The Char should be upper case, and the shift modified bit should be set to 1.
//
// Note:
// find `KeysList` type in https://raw.githubusercontent.com/extrawurst/gitui/master/src/keys/key_list.rs
// for all possible keys.
// Every key not overwritten via the config file will use the default specified there
(
    open_help: Some(( code: Char('?'), modifiers: ( bits: 0,),)),

    focus_left: Some(( code:  Char('h'), modifiers: ( bits: 0,),)),
    focus_below: Some(( code: Char('j'), modifiers: ( bits: 0,),)),
    focus_above: Some(( code: Char('k'), modifiers: ( bits: 0,),)),
    focus_right: Some(( code: Char('l'), modifiers: ( bits: 0,),)),


    move_left: Some((  code: Char('h'), modifiers: ( bits: 0,),)),
    move_down: Some((  code: Char('j'), modifiers: ( bits: 0,),)),
    move_up: Some((    code: Char('k'), modifiers: ( bits: 0,),)),
    move_right: Some(( code: Char('l'), modifiers: ( bits: 0,),)),

    tree_collapse_recursive: Some(( code: Char('H'), modifiers: ( bits: 1,),)),
    tree_expand_recursive: Some((   code: Char('L'), modifiers: ( bits: 1,),)),

    popup_up: Some(( code: Char('j'), modifiers: ( bits: 0,),)),
    pop_down: Some(( code: Char('k'), modifiers: ( bits: 0,),)),

    page_up: Some(( code:   Char('b'), modifiers: ( bits: 2,),)),
    page_down: Some(( code: Char('f'), modifiers: ( bits: 2,),)),

    shift_up: Some(( code: Char('K'), modifiers: ( bits: 1,),)),
    shift_down: Some(( code: Char('J'), modifiers: ( bits: 1,),)),

    stage_unstage_item: Some(( code: Char(' '), modifiers: ( bits: 0,),)),
    stash_open: Some(( code: Char('l'), modifiers: ( bits: 0,),)),

    push: Some(( code: Char('P'), modifiers: ( bits: 1),)),
    pull: Some(( code: Char('p'), modifiers: ( bits: 0),)),
)
